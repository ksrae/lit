import { defineConfig } from 'vite';
import fs from 'fs';
import path from 'path';

const srcDir = path.resolve(__dirname, 'src');
const componentDir = path.join(srcDir, 'web-component');

// 모든 .ts 파일을 찾아서 엔트리 포인트로 설정
const input = {};

// 디렉토리 탐색을 통해 각 .ts 파일을 input 객체에 추가

fs.readdirSync(componentDir, { withFileTypes: true }).forEach(dir => {
  if (dir.isDirectory()) {
    const files = fs.readdirSync(path.join(componentDir, dir.name));
    files.forEach(file => {
      if (file.endsWith('.ts')) {
        const key = `${dir.name}/${file.replace('.ts', '')}`; // 키를 설정 (예: 'button/index')
        input[key] = path.resolve(componentDir, dir.name, file); // 엔트리 포인트 경로 설정
      }
    });
  }
});

export default defineConfig({
  build: {
    rollupOptions: {
      input, // 수정된 부분: 각각의 .ts 파일을 엔트리 포인트로 설정
      output: {
        // 출력 설정: 디렉토리 및 파일명 구조를 조정할 수 있습니다.
        // 예시: 각 컴포넌트를 {name}.js 파일로 출력
        entryFileNames: `[name].js`,
        chunkFileNames: `[name].js`,
        assetFileNames: `[name].[ext]`
      }
    }
  }
});
